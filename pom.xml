<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.octo.android</groupId>
	<artifactId>android-sample-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>android-sample-parent</name>

	<properties>
		<!-- Android Dependencies -->
		<platform.version>4.2.2_r2</platform.version>
		<java.version>1.6</java.version>
		<android.sdk.version>17</android.sdk.version>
		<android.support.version>18</android.support.version>

		<!-- Compile Dependencies -->
		<joda.version>2.2</joda.version>

		<!-- Testing Dependencies -->
		<robolectric.version>2.1.1</robolectric.version>
		<hamcrest-core.version>1.3</hamcrest-core.version>
		<junit.version>4.8.2</junit.version>

		<easymock.version>3.2</easymock.version>
		<mockito-core.version>1.9.5</mockito-core.version>
		<dexmaker.version>1.0</dexmaker.version>
		<dexmaker-mockito.version>1.0</dexmaker-mockito.version>
		<mockwebserver.version>20130303</mockwebserver.version>
		<robotium.version>4.0</robotium.version>
		<spoon.version>1.0.1</spoon.version>
		<fest.version>1.0.3</fest.version>
		<celebrity.version>1.8</celebrity.version>
		<boundbox.version>1.2.0</boundbox.version>

		<!-- Plugins -->
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<android-maven-plugin.version>3.6.1</android-maven-plugin.version>
		<cobertura.version>2.5.2</cobertura.version>
		<maven-pmd-plugin.version>2.7.1</maven-pmd-plugin.version>
		<findbugs-maven-plugin.version>2.5.2</findbugs-maven-plugin.version>
		<maven-checkstyle-plugin.version>2.9.1</maven-checkstyle-plugin.version>
		<lint-maven-plugin.version>0.0.6</lint-maven-plugin.version>
		<eclipse-lifecycle-plugin.version>1.0.0</eclipse-lifecycle-plugin.version>
		<jar-plugin.version>2.4</jar-plugin.version>
		<emma.version>2.1.5320</emma.version>
		<jacoco-plugin.version>0.6.2.201302030002</jacoco-plugin.version>
		<maven-copy-plugin>0.2.5</maven-copy-plugin>

		<!-- Sonar common configuration -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.profile>Android Lint</sonar.profile>
	</properties>

	<modules>
		<module>android-sample</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>android</groupId>
				<artifactId>android</artifactId>
				<version>${platform.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>android.support</groupId>
				<artifactId>compatibility-v4</artifactId>
				<version>${android.support.version}</version>
			</dependency>
			<dependency>
				<groupId>android.test.uiautomator</groupId>
				<artifactId>uiautomator</artifactId>
				<version>${platform.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- libs -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda.version}</version>
			</dependency>
			<!-- code coverage -->
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>org.jacoco.agent</artifactId>
				<version>${jacoco-plugin.version}</version>
				<classifier>runtime</classifier>
			</dependency>
			<dependency>
				<groupId>emma</groupId>
				<artifactId>emma</artifactId>
				<version>${emma.version}</version>
			</dependency>
			<!-- Testing -->
			<dependency>
				<groupId>org.robolectric</groupId>
				<artifactId>robolectric</artifactId>
				<version>${robolectric.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${hamcrest-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<!-- because mockito already provides them -->
				<exclusions>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib-nodep</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito-core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.dexmaker</groupId>
				<artifactId>dexmaker</artifactId>
				<version>${dexmaker.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.dexmaker</groupId>
				<artifactId>dexmaker-mockito</artifactId>
				<version>${dexmaker-mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.mockwebserver</groupId>
				<artifactId>mockwebserver</artifactId>
				<version>${mockwebserver.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jayway.android.robotium</groupId>
				<artifactId>robotium-solo</artifactId>
				<version>${robotium.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.spoon</groupId>
				<artifactId>spoon-client</artifactId>
				<version>${spoon.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup</groupId>
				<artifactId>fest-android</artifactId>
				<version>${fest.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.rtyley</groupId>
				<artifactId>android-screenshot-celebrity</artifactId>
				<version>${celebrity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.boundbox</groupId>
				<artifactId>boundbox-library</artifactId>
				<version>${boundbox.version}</version>
			</dependency>			
		</dependencies>
	</dependencyManagement>

	<!-- Used to get latest version of maven android plugin snapshots -->
	<!-- <repositories> <repository> <id>sonatype-oss-public</id> <url>https://oss.sonatype.org/content/groups/public/</url> 
		<releases> <enabled>true</enabled> </releases> <snapshots> <enabled>true</enabled> 
		</snapshots> </repository> </repositories> <pluginRepositories> <pluginRepository> 
		<id>oss.sonatype.org-jayway-snapshots</id> <name>Jayway OpenSource SNAPSHOTs 
		on Sonatype.org</name> <url>http://oss.sonatype.org/content/repositories/jayway-snapshots/</url> 
		<snapshots> <enabled>true</enabled> </snapshots> </pluginRepository> </pluginRepositories> -->

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<extensions>true</extensions>
					<groupId>com.jayway.maven.plugins.android.generation2</groupId>
					<artifactId>android-maven-plugin</artifactId>
					<version>${android-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>lint</id>
							<goals>
								<goal>lint</goal>
							</goals>
							<phase>install</phase>
						</execution>
					</executions>
					<configuration>
						<sdk>
							<platform>${android.sdk.version}</platform>
						</sdk>
						<lint>
							<skip>false</skip>
							<failOnError>true</failOnError>
						</lint>
						<undeployBeforeDeploy>true</undeployBeforeDeploy>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>

				<!-- Code coverage -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-plugin.version}</version>
				</plugin>

				<!-- Quality Analysis Tools -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<configLocation>config/quality/checkstyle/checkstyle.xml</configLocation>
						<enableRulesSummary>false</enableRulesSummary>
					</configuration>
					<executions>
						<execution>
							<id>checkstyle-check</id>
							<phase>process-sources</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs-maven-plugin.version}</version>
					<configuration>
						<excludeFilterFile>config/quality/findbugs/findbugs-filter.xml</excludeFilterFile>
					</configuration>
					<executions>
						<execution>
							<id>findbugs-check</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
					<configuration>
						<targetJdk>1.5</targetJdk>
					</configuration>
					<executions>
						<execution>
							<id>pmd-check</id>
							<goals>
								<goal>check</goal>
								<goal>cpd-check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.lewisd</groupId>
					<artifactId>lint-maven-plugin</artifactId>
					<version>${lint-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Eclipse config -->
				<!-- http://stackoverflow.com/questions/13040788/how-to-elimate-the-maven-enforcer-plugin-goal-enforce-is-ignored-by-m2e-wa -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${eclipse-lifecycle-plugin.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.lewisd</groupId>
										<artifactId>lint-maven-plugin</artifactId>
										<versionRange>[${lint-maven-plugin.version},)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-checkstyle-plugin</artifactId>
										<versionRange>[${maven-checkstyle-plugin.version},)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.goldin</groupId>
										<artifactId>copy-maven-plugin</artifactId>
										<versionRange>[${maven-copy-plugin.version},)</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Others -->
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${jar-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.lewisd</groupId>
				<artifactId>lint-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>skipTests</name>
					<value>false</value>
				</property>
			</activation>
			<modules>
				<module>android-sample-tests</module>
				<module>android-sample-ui-tests</module>
				<module>android-sample-espresso-tests</module>
				<module>android-sample-espresso-spoon-tests</module>
			</modules>
		</profile>
		<profile>
			<id>emma</id>
			<modules>
				<module>android-sample-tests</module>
			</modules>
			<properties>
				<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

				<sonar.branch>emma</sonar.branch>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<sonar.core.codeCoveragePlugin>emma</sonar.core.codeCoveragePlugin>
				<sonar.emma.reportPath>../android-sample/target/emma</sonar.emma.reportPath>
			</properties>
		</profile>
		<profile>
			<id>cobertura</id>
			<modules>
				<module>android-sample-robolectric-tests</module>
			</modules>
			<properties>
				<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
				<sonar.branch>robolectric</sonar.branch>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<sonar.core.codeCoveragePlugin>cobertura</sonar.core.codeCoveragePlugin>
				<sonar.cobertura.reportPath>../target/site/cobertura/coverage.xml</sonar.cobertura.reportPath>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<configuration>
							<format>xml</format>
							<aggregate>true</aggregate>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>clean</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${cobertura.version}</version>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>uiautomator</id>
			<modules>
				<module>android-sample-ui-tests</module>
			</modules>
			<properties>
				<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

				<sonar.branch>uiautomator</sonar.branch>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
			</properties>
		</profile>
		<profile>
			<id>espresso</id>
			<modules>
				<module>android-sample-espresso-tests</module>
			</modules>
		</profile>
		<profile>
			<id>spoon</id>
			<modules>
				<module>android-sample-tests</module>
			</modules>
		</profile>
		<profile>
			<id>espresso-spoon</id>
			<modules>
				<module>android-sample-espresso-spoon-tests</module>
			</modules>
		</profile>
		<profile>
			<id>jacoco</id>
			<modules>
				<module>android-sample-tests</module>
			</modules>
			<properties>
				<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

				<sonar.branch>jacoco</sonar.branch>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<sonar.jacoco.excludes>*test*</sonar.jacoco.excludes>
				<sonar.jacoco.itReportPath>target/jacoco-it.exec</sonar.jacoco.itReportPath>
				<sonar.jacoco.reportPath>jacoco.exec</sonar.jacoco.reportPath>
				<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
			</properties>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${cobertura.version}</version>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>monkey</id>
			<properties>
				<sonar.branch>monkey</sonar.branch>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
			</properties>
		</profile>
		<profile>
			<id>cycle</id>
		</profile>
		<profile>
			<id>monkeyrunner</id>
			<properties>
				<sonar.branch>monkeyrunner</sonar.branch>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
			</properties>
		</profile>
	</profiles>
</project>
